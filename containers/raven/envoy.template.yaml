static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: {{PROXY_SERVICE_PORT}}
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: app
                access_log:
                  name: envoy.file_access_log
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
                common_http_protocol_options:
                  idle_timeout: 21s
                route_config:
                  name: app-proxy
                  response_headers_to_add:
                    - header:
                        key: x-raven-response-flags
                        value: "%RESPONSE_FLAGS%"
                    - header:
                        key: x-raven-status-code-details
                        value: "%RESPONSE_CODE_DETAILS%"
                  virtual_hosts:
                    - name: app-backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: waiter-app
                            timeout: 0s
                http_filters:
                  - name: envoy.router
                    typed_config: {}
                http_protocol_options: { enable_trailers: true }  # WHEN downstream-http1
                http2_protocol_options: { allow_connect: true }  # WHEN downstream-http2
                server_header_transformation: PASS_THROUGH
                request_timeout: 3600s
                stream_idle_timeout: 3600s
                upgrade_configs:
                  - upgrade_type: websocket
                useRemoteAddress: "true"
          # BEGIN app downstream-tls config
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols:
                - h2  # WHEN downstream-http2
                - http/1.1  # WHEN downstream-http1
                tls_certificates:
                - certificate_chain: { filename: "{{SSL_CERT}}" }
                  private_key: { filename: "{{SSL_KEY}}" }
          # END app downstream-tls config
    # BEGIN health-check backend config
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: {{PROXY_HEALTH_CHECK_PORT}}
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: health
                access_log:
                  name: envoy.file_access_log
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                    path: /dev/stdout
                common_http_protocol_options:
                  idle_timeout: 21s
                route_config:
                  name: health-check-proxy
                  virtual_hosts:
                    - name: health-check-backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: waiter-health-check
                            timeout: 0s
                http_filters:
                  - name: envoy.router
                    typed_config: {}
                server_header_transformation: PASS_THROUGH
                request_timeout: 1s
                stream_idle_timeout: 1s
          # BEGIN health-check downstream-tls config
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain: { filename: "{{SSL_CERT}}" }
                  private_key: { filename: "{{SSL_KEY}}" }
          # END health-check downstream-tls config
    # END health-check backend config
  clusters:
    - name: waiter-app
      connect_timeout: 5s
      type: static
      dns_lookup_family: V4_ONLY
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          common_http_protocol_options:
            idle_timeout: 22s
          explicit_http_config:
            http_protocol_options: { enable_trailers: true }  # WHEN upstream-http1
            http2_protocol_options: { allow_connect: true }  # WHEN upstream-http2
          upstream_http_protocol_options:
            auto_sni: true
      lb_policy: round_robin
      load_assignment:
        cluster_name: waiter-app
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: {{SERVICE_PORT}}
      # BEGIN app upstream-tls config
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            alpn_protocols:
            - h2
            - http/1.1
          sni: {{HOST}}
      # END app upstream-tls config
    # BEGIN health-check backend config
    - name: waiter-health-check
      connect_timeout: 1s
      type: static
      dns_lookup_family: V4_ONLY
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http_protocol_options: {}
          upstream_http_protocol_options:
            auto_sni: true
      lb_policy: round_robin
      load_assignment:
        cluster_name: waiter-health-check
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: {{HEALTH_CHECK_PORT}}
      # BEGIN health-check upstream-tls config
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          common_tls_context:
            alpn_protocols:
            - h2
            - http/1.1
          sni: {{HOST}}
      # END health-check upstream-tls config
    # END health-check backend config
admin:
  access_log_path: "/dev/stdout"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000
